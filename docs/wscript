
def build(ctx):

	doc_source = [
		"access.txt",
		"accopt.txt",
		"assoc.txt",
		"audio.txt",
		"authentic.txt",
		"authopt.txt",
		"autokey.txt",
		"bugs.txt",
		"build.txt",
		"clock.txt",
		"clockopt.txt",
		"cluster.txt",
		"comdex.txt",
		"confopt.txt",
		"copyright.txt",
		"debug.txt",
		"decode.txt",
		"discipline.txt",
		"discover.txt",
		"driver1.txt",
		"driver10.txt",
		"driver11.txt",
		"driver16.txt",
		"driver18.txt",
		"driver19.txt",
		"driver20.txt",
		"driver22.txt",
		"driver26.txt",
		"driver27.txt",
		"driver28.txt",
		"driver29.txt",
		"driver3.txt",
		"driver30.txt",
		"driver31.txt",
		"driver32.txt",
		"driver33.txt",
		"driver34.txt",
		"driver35.txt",
		"driver36.txt",
		"driver37.txt",
		"driver38.txt",
		"driver39.txt",
		"driver4.txt",
		"driver40.txt",
		"driver42.txt",
		"driver44.txt",
		"driver45.txt",
		"driver46.txt",
		"driver5.txt",
		"driver6.txt",
		"driver7.txt",
		"driver8.txt",
		"driver9.txt",
		"extern.txt",
		"filter.txt",
		"hints.txt",
		"hints/sco.txt",
		"hints/solaris-dosynctodr.txt",
		"hints/solaris.txt",
		"hints/vxworks.txt",
		"hints/winnt.txt",
		"history.txt",
		"howto.txt",
		"huffpuff.txt",
		"index.txt",
		"kern.txt",
		"kernpps.txt",
		"keygen.txt",
		"leap.txt",
		"miscopt.txt",
		"monopt.txt",
		"msyslog.txt",
		"mx4200data.txt",
		"ntp-wait.txt",
		"ntp_conf.txt",
		"ntpd.txt",
		"ntpdate.txt",
		"ntpdc.txt",
		"ntpdsim.txt",
		"ntpdsim_new.txt",
		"ntpq.txt",
		"ntptime.txt",
		"ntptrace.txt",
		"oncore-shmem.txt",
		"orphan.txt",
		"parsedata.txt",
		"parsenew.txt",
		"poll.txt",
		"pps.txt",
		"prefer.txt",
		"quick.txt",
		"rate.txt",
		"rdebug.txt",
		"refclock.txt",
		"release.txt",
		"select.txt",
		"sitemap.txt",
		"sntp.txt",
		"stats.txt",
		"tf582_4.txt",
		"tickadj.txt",
		"warp.txt",
		"xleave.txt"
	]

	ctx(
		target	= "doc",
		source	= doc_source
	)


	for dir in ["icons", "pic"]:

		files = ctx.path.ant_glob('%s/*' % dir) # Find images
		ctx.path.get_bld().make_node(dir).mkdir() # create 'pic' directory

		# Copy images
		ctx(
			features	= "subst",
			is_copy		= True,
			source		= files,
			target		= [ctx.path.find_node(dir).get_bld().make_node(x.name) for x in files]
		)

