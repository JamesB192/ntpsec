= TO DO =

== Checklist for a quality first release ==

=== Blocker bugs ===

None right now. (Sep-22 2015)

=== Build system ===

* Document build files.

* Cleanup and separate features in pylib/*

* Add 'snapshot' feature to dump config status into a JSON file for collecting 
  build + platform information

* scripts/*/*.in and scripts/ntpsweep.in need to be expanded into the
  actual scripts by substituting in @-cookies.  So do all files in the tree
  with extension *.txt.in.

* The install production needs to warn of stale ntpdc and ntpdate binaries.

* Add support for enabling all conditional checks to ensure none are broken.

* Add support for disabling specific conditional tests to ensure nothing is 
  compiled into the base in a surprising fashion.

=== Code ===

* We should audit scripts/ and utils/ to see which of those programs
  can be thrown out (some, like util/kern.c, don't even build).  Some
  (such as ntptrace) need to be translated into Python and supported.

* We need a build time option to disable all dangerous operations
  that ntpq can produce.


=== Porting ===

* The ntpd initialization sequence is still full of platform-
specific crud.

** We might be able to eliminate a lot of the Linux runtime
droproot code by using file capabilities.

* Better ANSI/POSIX conformance in MinGW and Visual Studio 2013 might
enable us to get rid of the SYS_WINNT code. Should be tried...

=== Testing ===

* Unit testing.  "make check" needs to run all the unit tests.

* Build testing.  The build/CI farm needs to be fully operational.

* Live testing.  Somebody needs to take the development branch,
build it on a real machines, and live-test it to make sure that
it issues sane corrections and doesn't core-dump or barf.
We need to do that on various platforms.

* We also need to live-test various refclocks.  It would be nice
to test the full matrix of refclock x platform, but that's too
much work.  We should probably test as many refclocks as we can
on at least one platform and test the NMEA, Atom, and SHM drivers
on most platforms.

* We need to live-test leap seconds, both getting them from
a file and getting them from other NTP servers.

* Option testing.  The new, non-autogen option-processing logic
is not yet tested anywhere but in ntpd itself.

* The script tests in scripts/t should be investigated, perhaps
  they are salvageable.

=== Documentation ===

* man pages outside of docs/ need to be merged with the
  Mills manpages inside it, with duplications removed.  In the
  list below, the original docs content is on the left and
  the external man pages are on the right.
+
[options="header"]
|===========================================================
| Inside docs       | Outside docs
| docs/ntp_conf.txt | ntpd/ntp.conf.txt
| docs/ntpdsim.txt  | docs/ntpdsim_new.txt
| docs/ntpwait.txt  | scripts/ntp-wait/ntp-wait.txt
| docs/sntp.txt     | sntp/sntp.txt
| docs/tickadj.txt  | -
| -                 | ntpd/ntp.keys.txt
| -                 | scripts/calc_tickadj/calc_tickadj.txt
| -                 | scripts/summary.txt
| -                 | scripts/ntpsweep/ntpsweep.txt
| -                 | scripts/plot_summary.txt
| -                 | scripts/update-leap/update-leap.txt
|===========================================================

* Also, any exterior documents retained need to be parametrized
  with the macros in docs/asciidoc.conf. and the asciidoc build rules
  need to use that.

* In the docs subdirectory, include/command.txt is an HTML passthrough
  in a not entirely successful attempt to emulate the look of the
  Mills HTML documentation this directory was made from. It should be
  cleaned up or replaced.

* Similarly, includes/footer.txt is a tabular hack made to resemble the
  old HTML and should be cleaned up.

* A serious content-editing and update pass on the exterior documents is needed.

* Part of d) is the ntp -> ntps name change.  Note: ntp-keygen -> ntpskeygen,
  and perhaps sntp -> ntpss (so *all* programs have the ntps prefix).

* The format and organization of the NEWS file needs a rethink.

* Phabricator-centered workflow needs to be written up and integrated
  with the website content I wrote for us.

* Website needs to be integrated (with a contacts and services page,
  among other things) and published.

=== Remaining procedural issues ===

* The dev changes need to be fed through through Phabricator,
  reviewed, and if necessary fixed.

* Version-numbering policy needs to be decided and written up.

* We need a release checklist.

== After first release ==

* There is a mess around the symbols NO_MAIN_ALLOWED, BUILD_AS_LIB, and
  LIBNTP_C that needs to be refactored.  ntpd should *always* be built as
  a library linked to a main module, these guard symbols should go away.

* seccomp sandboxing fails to build under Ubuntu due to some confusion
  in the Linux headers.  Investigate.

* Should tickadj and ntptime merge? ntpstune, anyone? 

* Adapt BSD snprintb into a better dumper for flag words like flash
  codes (throwing out the old-format support) and use it
  systematically to make reports more readable.

* Timer events need, as much as possible, to be eliminated - they eat
  power on laptops and mobile devices, usually unnecessarily.  At least
  one, the /etc/resolv.conf reload, would be better handled under Linux
  by asynchronous file-change notifications.

Hal:
> I think there is some interaction between when the ACTS driver calls and the 
> state of other stuff, like the connection to the net.  This is probably a 
> good candidate to get cleaned up.
> 
> There is another possible tangle in this area.  If you set "noselect" on the 
> server line in the config file, ntpd goes through all the action of 
> collecting the data and writing log files, but then drops the clock.  I don't 
> know things well enough to be sure that this sort of logic won't pick one 
> back up.

== Old, sometime ancient stuff ==

970711: Look Real Hard at changing the key stuff from u_long to u_int32.

970711: Make sure it's safe to convert proto_config's 2nd argument from
	u_long to u_int32.  Watch "set" in ntp_request.c:setclr_flags().

970318: in hourly_stats(?), squawk if the magnitude of the drift is,
	say, >400.
